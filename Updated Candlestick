import React, { useState, useEffect } from 'react';

const Indicators = ({ selectedIndicators, setSelectedIndicators }) => {
  const [isOpen, setIsOpen] = useState(false); // State to manage dropdown visibility
  const [selectAllChecked, setSelectAllChecked] = useState(false); // State to manage "Select All" checkbox

  useEffect(() => {
    // Update "Select All" checkbox state based on selectedIndicators
    setSelectAllChecked(selectedIndicators.length === 8);
  }, [selectedIndicators]);

  const toggleDropdown = () => {
    setIsOpen(!isOpen); // Toggle dropdown visibility
  };

  const toggleIndicator = (indicator) => {
    const isSelected = selectedIndicators.includes(indicator);
    if (isSelected) {
      setSelectedIndicators(selectedIndicators.filter((item) => item !== indicator));
    } else {
      setSelectedIndicators([...selectedIndicators, indicator]);
    }
  };

  const selectAll = () => {
    if (selectAllChecked) {
      setSelectedIndicators([]);
    } else {
      setSelectedIndicators(["rsi", "macd", "obv", "ena_5", "ema_13", "ena_26", "wap", "bb"]);
    }
  };

  return (
    <div className="max-w-md mx-auto p-4">
      <label
        htmlFor="indicators"
        className="block text-sm font-medium text-gray-700 cursor-pointer"
        onClick={toggleDropdown}
      >
        Choose Indicators
      </label>
      {isOpen && (
        <div className="mt-2">
          <div className="flex items-center mb-2">
            <input
              type="checkbox"
              id="select-all"
              className="mr-2"
              checked={selectAllChecked}
              onChange={() => {
                setSelectAllChecked(!selectAllChecked);
                selectAll();
              }}
            />
            <label
              htmlFor="select-all"
              className="text-sm font-medium text-gray-700 cursor-pointer"
            >
              Select All
            </label>
          </div>
          {["rsi", "macd", "obv", "ena_5", "ema_13", "ena_26", "wap", "bb"].map(
            (indicator) => (
              <div key={indicator} className="flex items-center mb-1">
                <input
                  type="checkbox"
                  id={indicator}
                  className="mr-2"
                  checked={selectedIndicators.includes(indicator)}
                  onChange={() => toggleIndicator(indicator)}
                />
                <label
                  htmlFor={indicator}
                  className="text-sm font-medium text-gray-700 cursor-pointer"
                >
                  {indicator.toUpperCase()}
                </label>
              </div>
            )
          )}
        </div>
      )}
    </div>
  );
};

export default Indicators;
