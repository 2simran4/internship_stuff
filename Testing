import React from 'react';
import { render, fireEvent, screen } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import SearchBar from './SearchBar';

describe('SearchBar Component', () => {
  const handleSearch = jest.fn();
  const handleClickOption = jest.fn();

  const setup = () => {
    const utils = render(<SearchBar onSearch={handleSearch} />);
    const input = utils.getByLabelText('search-input');
    const form = utils.getByRole('form');
    return {
      input,
      form,
      ...utils,
    };
  };

  test('renders search bar', () => {
    const { input } = setup();
    expect(input).toBeInTheDocument();
  });

  test('handles user input', () => {
    const { input } = setup();
    fireEvent.change(input, { target: { value: 'test query' } });
    expect(input.value).toBe('test query');
  });

  test('calls onSearch on form submit', () => {
    const { input, form } = setup();
    fireEvent.change(input, { target: { value: 'test query' } });
    fireEvent.submit(form);
    expect(handleSearch).toHaveBeenCalledWith('test query');
    expect(handleSearch).toHaveBeenCalledTimes(1);
  });

  test('shows options on input focus', () => {
    render(<SearchBar onSearch={handleSearch} />);
    const input = screen.getByLabelText('search-input');
    fireEvent.focus(input);
    const options = screen.getByRole('list');
    expect(options).toBeInTheDocument();
  });

  test('handles option click', () => {
    render(<SearchBar onSearch={handleSearch} />);
    const input = screen.getByLabelText('search-input');
    fireEvent.focus(input);
    const option = screen.getByText('Option Text'); // Replace 'Option Text' with actual option text
    fireEvent.click(option);
    expect(handleClickOption).toHaveBeenCalledWith('Option Text');
  });
});
