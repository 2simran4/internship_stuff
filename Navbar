import React, { useState, useRef, useEffect } from 'react';

const Indicators = () => {
    const [isOpen, setIsOpen] = useState(false);
    const dropdownRef = useRef(null);

    const toggleDropdown = () => {
        setIsOpen(!isOpen);
    };

    const handleClickOutside = (event) => {
        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
            setIsOpen(false);
        }
    };

    const handleFocusOutside = (event) => {
        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
            setIsOpen(false);
        }
    };

    useEffect(() => {
        document.addEventListener('mousedown', handleClickOutside);
        document.addEventListener('focusin', handleFocusOutside);

        return () => {
            document.removeEventListener('mousedown', handleClickOutside);
            document.removeEventListener('focusin', handleFocusOutside);
        };
    }, []);

    return (
        <div className="relative" ref={dropdownRef}>
            <div className="relative inline-block p-3">
                <div
                    className="border border-gray-300 rounded-md p-2 cursor-pointer flex items-center justify-between"
                    onClick={toggleDropdown}
                >
                    <span className="text-sm font-medium text-gray-700" style={{ display: 'flex', flexDirection: 'row', gap: '3px' }}>
                        <img
                            src="https://img.icons8.com/?size=100&id=375&format=png&color=000000"
                            style={{ width: '20px', height: '20px' }}
                            alt="icon"
                        />
                        Indicators
                    </span>
                    <span className={`arrow ${isOpen ? 'open' : ''}`}>{isOpen ? '▲' : '▼'}</span>
                </div>
            </div>
            {isOpen && (
                <div
                    className="absolute z-10 w-full border border-gray-300 bg-white rounded-md shadow-lg"
                    style={{ top: 'calc(100% + 5px)', maxHeight: '300px', overflowY: 'auto' }}
                >
                    <div className="flex items-center mb-2 ml-3">
                        <input
                            type="checkbox"
                            id="select-all"
                            className="mr-2 cursor-pointer"
                            checked={false} // Change this line as per your requirement
                            onChange={() => {}} // Change this line as per your requirement
                        />
                        <label htmlFor="select-all" className="text-sm font-medium text-gray-700 cursor-pointer">
                            Select All
                        </label>
                    </div>
                    {/* Add more checkboxes here as needed */}
                </div>
            )}
        </div>
    );
};

export default Indicators;
