import React from 'react';
import ReactApexChart from 'react-apexcharts';

class ChartComponent extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      candlestickSeries: [
        {
          name: 'Candlestick',
          data: this.generateCandlestickData(new Date('11 Feb 2017').getTime(), 20),
        },
      ],
      rsiSeries: [
        {
          name: 'RSI',
          data: this.generateRSIData(new Date('11 Feb 2017').getTime(), 20),
        },
      ],
      candlestickOptions: {
        chart: {
          type: 'candlestick',
          height: 300,
          id: 'candlestick',
          group: 'financial',
          toolbar: {
            autoSelected: 'zoom',
          },
        },
        xaxis: {
          type: 'datetime',
        },
        yaxis: {
          title: {
            text: 'Price',
          },
          tooltip: {
            enabled: true,
          },
        },
        tooltip: {
          shared: true,
          intersect: false,
          y: {
            formatter: function (val) {
              return val !== null ? val.toFixed(2) : 'N/A';
            },
          },
        },
        noData: {
          text: 'Loading...',
        },
      },
      rsiOptions: {
        chart: {
          type: 'line',
          height: 200,
          id: 'rsi',
          group: 'financial',
          toolbar: {
            autoSelected: 'zoom',
          },
        },
        xaxis: {
          type: 'datetime',
        },
        yaxis: {
          opposite: true,
          title: {
            text: 'RSI',
          },
          min: 0,
          max: 100,
          tooltip: {
            enabled: true,
          },
        },
        tooltip: {
          shared: true,
          intersect: false,
          y: {
            formatter: function (val) {
              return val !== null ? val.toFixed(2) : 'N/A';
            },
          },
        },
        noData: {
          text: 'Loading...',
        },
      },
    };
  }

  generateCandlestickData(baseval, count) {
    const series = [];
    for (let i = 0; i < count; i++) {
      const open = Math.floor(Math.random() * (100 - 90 + 1)) + 90;
      const close = Math.floor(Math.random() * (100 - 90 + 1)) + 90;
      const high = Math.max(open, close) + Math.floor(Math.random() * 10);
      const low = Math.min(open, close) - Math.floor(Math.random() * 10);
      series.push({
        x: new Date(baseval + i * 86400000),
        y: [open, high, low, close],
      });
    }
    return series;
  }

  generateRSIData(baseval, count) {
    const series = [];
    for (let i = 0; i < count; i++) {
      series.push({
        x: new Date(baseval + i * 86400000),
        y: Math.floor(Math.random() * 100),
      });
    }
    return series;
  }

  render() {
    return (
      <div id="chart">
        <ReactApexChart
          options={this.state.candlestickOptions}
          series={this.state.candlestickSeries}
          type="candlestick"
          height={300}
        />
        <ReactApexChart
          options={this.state.rsiOptions}
          series={this.state.rsiSeries}
          type="line"
          height={200}
        />
      </div>
    );
  }
}

export default ChartComponent;
