import React, { useState, useEffect } from 'react';
import socketIOClient from "socket.io-client";

const ENDPOINT = "http://127.0.0.1:4001"; // Replace with your endpoint

const StockStrip = () => {
    const [companyData, setCompanyData] = useState({});

    const updateData = (companyId, closeVal, timeStamp) => {
        setCompanyData(prevData => {
            // Copy the existing state
            const newData = { ...prevData };
            // If company exists, append new data, otherwise create new list
            if (newData[companyId]) {
                newData[companyId].push({ value: closeVal, time: timeStamp });
            } else {
                newData[companyId] = [{ value: closeVal, time: timeStamp }];
            }
            return newData;
        });
    };

    useEffect(() => {
        const socket = socketIOClient(ENDPOINT);

        socket.on("getOverview", data => {
            updateData(data.companyId, data.close, data.timestamp);
        });

        // Clean up on unmount
        return () => socket.disconnect();
    }, []);

    const formatNumber = (num) => {
        return num === undefined || isNaN(num) ? 'N/A' : parseFloat(num).toFixed(2);
    };

    return (
        <div className="stock-strip-container">
            <div className="stock-strip">
                {Object.entries(companyData).map(([companyId, stockList]) => (
                    stockList.map((stock, index) => (
                        <div className="stock-strip_item" key={`${companyId}-${index}`}>
                            <span>{companyId}</span>
                            <span className={stock.value > 0 ? 'positive' : 'negative'}>
                                {formatNumber(stock.value)}%
                            </span>
                            <span>{new Date(stock.time).toLocaleString()}</span>
                        </div>
                    ))
                ))}
            </div>
        </div>
    );
};

export default StockStrip;
