import React, { useState, useEffect } from 'react';
import Select from 'react-select';
import axios from 'axios';

const MultiSelectWithSearch = ({ company, setCompany }) => {
  const [companyList, setCompanyList] = useState([]);
  const [options, setOptions] = useState([]);

  useEffect(() => {
    if (companyList.length > 0) {
      const tempList = companyList.map(item => ({
        label: item.name,
        value: item.id,
      }));
      setOptions(tempList);
    }
  }, [companyList]);

  const handleChange = (value) => {
    if (value.length <= 5) {
      setCompany(value);
    }
  };

  // Fetching companyList data (example)
  useEffect(() => {
    axios.get('/api/company-list')
      .then(response => {
        setCompanyList(response.data);
      })
      .catch(error => {
        console.error('Error fetching company list:', error);
      });
  }, []);

  // Custom styles for react-select
  const customStyles = {
    control: (provided, state) => ({
      ...provided,
      borderColor: state.isFocused ? 'blue' : 'gray',
      boxShadow: state.isFocused ? '0 0 0 1px blue' : provided.boxShadow,
      '&:hover': {
        borderColor: state.isFocused ? 'blue' : 'gray'
      }
    }),
    multiValue: (provided) => ({
      ...provided,
      backgroundColor: 'lightblue'
    }),
    multiValueLabel: (provided) => ({
      ...provided,
      color: 'blue'
    }),
    multiValueRemove: (provided) => ({
      ...provided,
      color: 'blue',
      ':hover': {
        backgroundColor: 'blue',
        color: 'white'
      }
    })
  };

  return (
    <Select
      options={options}
      isMulti
      onChange={handleChange}
      styles={customStyles}
    />
  );
};

export default MultiSelectWithSearch;
