import React, { useState, useEffect } from 'react';
import Select from 'react-select';
import axios from 'axios';
import CustomRemoveIcon from './CustomRemoveIcon'; // Assuming you have a CustomRemoveIcon component

const MultiSelectWithSearch = ({ company, setCompany }) => {
  const [companyList, setCompanyList] = useState([]);
  const [options, setOptions] = useState([]);

  useEffect(() => {
    if (companyList.length > 0) {
      const tempList = companyList.map(item => ({
        label: item.name,
        value: item.id,
      }));
      setOptions(tempList);
    }
  }, [companyList]);

  const handleChange = (value) => {
    if (value.length <= 5) {
      setCompany(value);
    }
  };

  // Fetching companyList data (example)
  useEffect(() => {
    axios.get('/api/company-list')
      .then(response => {
        setCompanyList(response.data);
      })
      .catch(error => {
        console.error('Error fetching company list:', error);
      });
  }, []);

  // Custom styles for react-select
  const customStyles = {
    control: (provided, state) => ({
      ...provided,
      borderColor: state.isFocused ? 'blue' : 'gray',
      boxShadow: state.isFocused ? '0 0 0 1px blue' : 'none', // Customize the box-shadow for focused and unfocused states
      '&:hover': {
        borderColor: state.isFocused ? 'blue' : 'gray'
      }
    }),
    input: (provided) => ({
      ...provided,
      border: 'none', // Remove default border from the input field
      boxShadow: 'none' // Remove default box-shadow from the input field
    }),
    multiValue: (provided) => ({
      ...provided,
      backgroundColor: 'lightblue'
    }),
    multiValueLabel: (provided) => ({
      ...provided,
      color: 'blue'
    }),
    multiValueRemove: (provided) => ({
      ...provided,
      color: 'blue',
      ':hover': {
        backgroundColor: 'blue',
        color: 'white',
        cursor: 'pointer'
      }
    }),
    menu: (provided) => ({
      ...provided,
      border: '1px solid blue', // Set border for the dropdown menu
      borderRadius: '4px',
      backgroundColor: 'white',
      zIndex: 9999
    }),
    menuList: (provided) => ({
      ...provided,
      padding: 0,
      cursor: 'pointer'
    }),
    option: (provided, state) => ({
      ...provided,
      backgroundColor: state.isFocused ? 'lightgray' : 'white',
      color: 'black',
      '&:hover': {
        backgroundColor: 'lightgray',
        cursor: 'pointer'
      }
    }),
    dropdownIndicator: (provided, state) => ({
      ...provided,
      color: state.isFocused ? 'blue' : 'gray',
      '&:hover': {
        color: 'blue',
        cursor: 'pointer'
      }
    }),
    indicatorSeparator: (provided) => ({
      ...provided,
      display: 'none'
    }),
    placeholder: (provided) => ({
      ...provided,
      color: 'gray'
    })
  };

  // Custom components for react-select
  const customComponents = {
    MultiValueRemove: CustomRemoveIcon
  };

  return (
    <Select
      options={options}
      isMulti
      onChange={handleChange}
      styles={customStyles}
      components={customComponents}
      classNamePrefix="custom-select"
    />
  );
};

export default MultiSelectWithSearch;
